services:
  cloudflared:
    build: .
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    volumes:
      - ./secrets/credentials.json:/etc/cloudflared/credentials.json:ro
      - ./secrets/cert.pem:/etc/cloudflared/cert.pem:ro
    networks:
      - nas_network
    depends_on:
      nextcloud-db:
        condition: service_healthy
      redis:
        condition: service_healthy

  nextcloud:
    image: nextcloud:latest
    platform: linux/arm64
    container_name: nas_nextcloud
    restart: unless-stopped
    ports:
      - "9991:80"
    env_file:
      - .env
    environment:
      # Database connection variables (sourced from .env)
      - POSTGRES_HOST=nextcloud-db
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}

      # Admin credentials (sourced from .env)
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}

      # Nextcloud behind Cloudflare Tunnel settings (enabled for external access)
      - OVERWRITEPROTOCOL=http
      - OVERWRITEHOST=192.168.1.4:9991

      # - OVERWRITEPROTOCOL=https
      # - OVERWRITEHOST=nas.soundsgoodlab.sg

      # Trust both Cloudflare Tunnel proxy AND local network IPs
      - TRUSTED_PROXIES=172.16.0.0/12 192.168.0.0/16 10.0.0.0/8

      # PHP tuning for Radxa device
      - PHP_MEMORY_LIMIT=4G
      - PHP_UPLOAD_LIMIT=16G
    volumes:
      - ./nextcloud/html:/var/www/html
      - /mnt/storage/nextcloud:/var/www/html/data
    depends_on:
      nextcloud-db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/status.php" ]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - nas_network

  nextcloud-cron:
    image: nextcloud:latest
    platform: linux/arm64
    container_name: nas_nextcloud_cron
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./nextcloud/html:/var/www/html
      - /mnt/storage/nextcloud:/var/www/html/data
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-db
      - redis
    networks:
      - nas_network

  nextcloud-db:
    image: postgres:15-alpine
    platform: linux/arm64
    container_name: nas_nextcloud_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
    volumes:
      - ./nextcloud/db:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U nextcloud -d nextcloud" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - nas_network

  redis:
    image: redis:alpine
    platform: linux/arm64
    container_name: nas_redis
    restart: unless-stopped
    env_file:
      - .env
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    volumes:
      - ./nextcloud/redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nas_network

networks:
  nas_network:
    driver: bridge
